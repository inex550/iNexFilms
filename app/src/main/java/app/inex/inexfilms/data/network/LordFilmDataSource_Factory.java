// Generated by Dagger (https://dagger.dev).
package app.inex.inexfilms.data.network;

import app.inex.inexfilms.core.prefs.SettingsPreferences;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LordFilmDataSource_Factory implements Factory<LordFilmDataSource> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<SettingsPreferences> prefsProvider;

  public LordFilmDataSource_Factory(Provider<OkHttpClient> okHttpClientProvider,
      Provider<SettingsPreferences> prefsProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
    this.prefsProvider = prefsProvider;
  }

  @Override
  public LordFilmDataSource get() {
    return newInstance(okHttpClientProvider.get(), prefsProvider.get());
  }

  public static LordFilmDataSource_Factory create(Provider<OkHttpClient> okHttpClientProvider,
      Provider<SettingsPreferences> prefsProvider) {
    return new LordFilmDataSource_Factory(okHttpClientProvider, prefsProvider);
  }

  public static LordFilmDataSource newInstance(OkHttpClient okHttpClient,
      SettingsPreferences prefs) {
    return new LordFilmDataSource(okHttpClient, prefs);
  }
}
